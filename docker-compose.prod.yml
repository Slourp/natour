version: "3.7"
services:
  api:
    container_name: ${PROJECT_NAME}_BACKEND
    build:
      context: .
      target: ${NODE_ENV}
      args:
        NODE_ENV: '${NODE_ENV}'
        USER_ID: '${USER_ID:-1000}'
        GROUP_ID: '${GROUP_ID:-1000}'
        USER: '${USER:-User}'
    restart:
      on-failure:5
    environment:
      - NODE_ENV=${NODE_ENV}
      - SERVER_PORT=${SERVER_PORT}
    ports:
      - "9229:9229"
    labels:
      # permet de cr√©er un routeur Traefik 
      - "traefik.enable=true"
      - "traefik.http.services.web.loadbalancer.server.port=${SERVER_PORT}"

      - "traefik.http.routers.apimoulinette.rule=Host(`api.moulinette.popgroupe.tech`)"
      - "traefik.http.routers.apimoulinette.entrypoints=websecure"
      - "traefik.http.routers.apimoulinette.tls.certresolver=myhttpchallenge"
    volumes:
      - .:/node/app:delegated
      - /node/app/node_modules
    networks:
      - traefik-proxy
  mongo:
    container_name: ${PROJECT_NAME}_MONGO
    hostname: mongo
    image: mongo
    env_file:
      - .env
    volumes:
      - "./docker/mongo/mongo-entrypoint/:/docker-entrypoint-initdb.d/"
    volumes_from:
      - mongodata
    networks:
      - traefik-proxy
  mongodata:
    container_name: ${PROJECT_NAME}_MONGO_DATA
    image: mongo:3.0.4
    volumes:
      - /data/db
    command: --break-mongo
networks:
  traefik-proxy:
    external: true
volumes:
  certs:
